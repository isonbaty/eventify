
datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id           String     @id @default(uuid())
  clerkId      String     @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  isAdmin      Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  properties   Property[]
  events       Event[]
  eventAttendees EventAttendee[]


}

model Property {
  id          String     @id @default(uuid())
  name        String
  tagline     String
  category    String
  image       String
  country     String
  description String
  price       Int
  guests      Int
  bedrooms    Int
  beds        Int
  baths       Int
  amenities   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  profile     Profile    @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId   String
  
}

model Event {
  id               String    @id @default(uuid())
  name        String
  tagline     String
  category    String
  image       String
  country     String?
  venue       String
  location    String?
  description String
  price       Int?
  maxguests   Int?
  duration    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime   @updatedAt
  hostid      Int?
  published   Boolean?
  profile     Profile    @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId   String
  eventAttendees EventAttendee[]
  
  
  
}


model EventAttendee {
  id        String    @id @default(uuid())
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   String
  attendee  Profile   @relation(fields: [attendeeId], references: [clerkId])
  attendeeId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
